{"version":3,"file":"static/js/297.e291e828.chunk.js","mappings":"iRAEaA,EAASC,EAAAA,GAAAA,OAAH,+eAoBNC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAeF,EAAAA,GAAAA,OAAH,4RAiBZG,EAAoBH,EAAAA,GAAAA,KAAH,6MAYjBI,EAAkBJ,EAAAA,GAAAA,MAAH,iQ,kBCxDb,SAASK,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACI,+BACI,SAACV,EAAD,WACI,UAACE,EAAD,CAAYK,SAfH,SAAAI,GACjBA,EAAIC,iBAEkD,KAAlDD,EAAIE,cAAcC,SAASL,MAAMM,MAAMC,QAI3CT,EAASE,GACTE,EAAIE,cAAcI,SAJdC,EAAAA,OAAAA,QAAe,sCAWX,WACI,UAACf,EAAD,CAAcgB,KAAK,SAAnB,WACI,SAAC,MAAD,CAAUC,KAAK,QACf,SAAChB,EAAD,yBAIJ,SAACC,EAAD,CACIc,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,QACLT,MAAON,EACPgB,SAjCC,SAAAd,GAChBD,EAASC,EAAIE,cAAcE,MAAMW,yBCA3B,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BrB,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMzB,EAAQwB,EAAaE,IAAI,SAuB/B,OAhBCC,EAAAA,EAAAA,YAAU,WACE3B,GAGT4B,EAAAA,GACuB5B,GAClB6B,MAAK,SAAAR,GACE,IAAKA,EAAOS,QAAQC,OAChB,OAAOC,QAAQC,OAAO,IAAIC,MAAMzB,EAAAA,OAAAA,QAAe,8EAEnDa,GAAU,OAAID,EAAOS,eAGnC,CAAC9B,KAIC,iCACI,SAACH,EAAD,CAAWC,SAtBM,SAACE,GACtByB,EAAgB,CAAEzB,MAAOA,OAsBpBqB,IACG,wBACKA,EAAOc,KAAI,SAAAC,GAAK,OACb,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAI,OAAErB,QAAF,IAAEA,EAAAA,EAAD,KAFlB,SAIKiB,EAAMK,SALNL,EAAME","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Search = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  margin: 15px 0 0 0;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 18px;\n  padding-bottom: 18px;\n  color: #fff;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 45px;\n  height: 45px;\n  border: 0;\n\n  padding: 14px 10px 10px 10px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n \n  &:hover {\n  opacity: 1;\n  }\n\n`\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n    &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    }\n`\n\n","import { useState} from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Search, SearchForm, SearchButton, SearchButtonLabel, SearchFormInput } from './Searchbar.styled';\nimport { FiSearch } from 'react-icons/fi';\n\nexport default function Searchbar({onSubmit}) {\n    const [query, setQuery] = useState('');\n    \n    const handleChange = evt => {\n         setQuery(evt.currentTarget.value.toLowerCase());\n    };\n    \n    const handleSubmit = evt => {\n        evt.preventDefault();\n        \n        if (evt.currentTarget.elements.query.value.trim() === '') {\n            Notify.failure('Ð•nter the name of the movie!');\n           return\n        };\n        onSubmit(query)\n        evt.currentTarget.reset();\n       \n    };\n\n    return (\n        <>\n            <Search>\n                <SearchForm onSubmit={handleSubmit}>\n                    <SearchButton type=\"submit\">\n                        <FiSearch size='20'/>\n                        <SearchButtonLabel>\n                            Search\n                        </SearchButtonLabel>\n                    </SearchButton>\n                    <SearchFormInput\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        name='query'\n                        value={query}\n                        onChange={handleChange}\n                    />\n                </SearchForm>\n            </Search>\n             \n        </>\n    )\n}\n\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport * as movieApi from '../../services/movies-api'\nimport { Link, useLocation } from 'react-router-dom';\nimport Searchbar from '../Searchbar/Searchbar';\nimport {useSearchParams} from 'react-router-dom';\n// // import PropTypes from \"prop-types\"; \n\n\nexport default function MoviesPage() {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('query');\n   \n    \n    const handleFormSubmit = (query) => {\n        setSearchParams({ query: query});\n  };\n\n     useEffect(() => {\n            if (!query ) {\n                return\n            };\n        movieApi\n            .fetchSearchMowies(query)\n            .then(movies => {\n                    if (!movies.results.length) {\n                        return Promise.reject(new Error(Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\")));\n                    }\n                    setMovies([...movies.results])\n                    \n        })\n    },[query]);\n\n   \n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit}/>\n            {movies && (\n                <ul >\n                    {movies.map(movie => (\n                        <li key={movie.id}>\n                            <Link\n                                to={`/movies/${movie.id}`}\n                                state={{ from: location ?? `/` }}\n                            >\n                                {movie.title}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n             \n        </>\n    )\n}\n"],"names":["Search","styled","SearchForm","SearchButton","SearchButtonLabel","SearchFormInput","Searchbar","onSubmit","useState","query","setQuery","evt","preventDefault","currentTarget","elements","value","trim","reset","Notify","type","size","autoComplete","autoFocus","placeholder","name","onChange","toLowerCase","MoviesPage","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","movieApi","then","results","length","Promise","reject","Error","map","movie","to","id","state","from","title"],"sourceRoot":""}